install.packages("plotly")
library(plotly)
p <- plot_ly(x = c(20, 14, 23), y = c('giraffes', 'orangutans', 'monkeys'), type = 'bar', orientation = 'h')
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = plotly_POST(p, filename="horizontalbar/basic")
chart_linkx <- rnorm(5)
names(x) <- 1:5
barplot(x, horiz=T)
barplot(rev(x), horiz=T)
x <- rnorm(5)
names(x) <- 1:5
barplot(x, horiz=T)
barplot(rev(x), horiz=T)> # NOT RUN {
> require(grDevices) # for colours
> tN <- table(Ni <- stats::rpois(100, lambda = 5))
> r <- barplot(tN, col = rainbow(20))
> #- type = "h" plotting *is* 'bar'plot
> lines(r, tN, type = "h", col = "red", lwd = 2)
> 
> barplot(tN, space = 1.5, axisnames = FALSE,
        sub = "barplot(..., space= 1.5, axisnames = FALSE)")
> 
> barplot(VADeaths, plot = FALSE)
[1] 0.7 1.9 3.1 4.3
> barplot(VADeaths, plot = FALSE, beside = TRUE)
     [,1] [,2] [,3] [,4]
[1,]  1.5  7.5 13.5 19.5
[2,]  2.5  8.5 14.5 20.5
[3,]  3.5  9.5 15.5 21.5
[4,]  4.5 10.5 16.5 22.5
[5,]  5.5 11.5 17.5 23.5
> 
> mp <- barplot(VADeaths) # default
> tot <- colMeans(VADeaths)
> text(mp, tot + 3, format(tot), xpd = TRUE, col = "blue")
> barplot(VADeaths, beside = TRUE,
        col = c("lightblue", "mistyrose", "lightcyan",
                "lavender", "cornsilk"),
        legend = rownames(VADeaths), ylim = c(0, 100))
> title(main = "Death Rates in Virginia", font.main = 4)
> 
> hh <- t(VADeaths)[, 5:1]
> mybarcol <- "gray20"
> mp <- barplot(hh, beside = TRUE,
        col = c("lightblue", "mistyrose",
                "lightcyan", "lavender"),
        legend = colnames(VADeaths), ylim = c(0,100),
        main = "Death Rates in Virginia", font.main = 4,
        sub = "Faked upper 2*sigma error bars", col.sub = mybarcol,
        cex.names = 1.5)
> segments(mp, hh, mp, hh + 2*sqrt(1000*hh/100), col = mybarcol, lwd = 1.5)
> stopifnot(dim(mp) == dim(hh))  # corresponding matrices
> mtext(side = 1, at = colMeans(mp), line = -2,
      text = paste("Mean", formatC(colMeans(hh))), col = "red")
> 
> # Bar shading example
> barplot(VADeaths, angle = 15+10*1:5, density = 20, col = "black",
        legend = rownames(VADeaths))
> title(main = list("Death Rates in Virginia", font = 4))
> 
> # border :
> barplot(VADeaths, border = "dark blue") 
> # }
> # NOT RUN {
> 
> # }
> # NOT RUN {
> 
> # }
> # NOT RUN {
> # log scales (not much sense here):
> barplot(tN, col = heat.colors(12), log = "y")
> barplot(tN, col = gray.colors(20), log = "xy")
> 
> # args.legend
> barplot(height = cbind(x = c(465, 91) / 465 * 100,
                       y = c(840, 200) / 840 * 100,
                       z = c(37, 17) / 37 * 100),
        beside = FALSE,
        width = c(465, 840, 37),
        col = c(1, 2),
        legend.text = c("A", "B"),
        args.legend = list(x = "topleft"))
> # }
>  # NOT RUN {
 require(grDevices) # for colours
 tN <- table(Ni <- stats::rpois(100, lambda = 5))
 r <- barplot(tN, col = rainbow(20))
 #- type = "h" plotting *is* 'bar'plot
 lines(r, tN, type = "h", col = "red", lwd = 2)
 barplot(tN, space = 1.5, axisnames = FALSE,
        sub = "barplot(..., space= 1.5, axisnames = FALSE)")
 barplot(VADeaths, plot = FALSE)
[1] 0.7 1.9 3.1 4.3
 barplot(VADeaths, plot = FALSE, beside = TRUE)
     [,1] [,2] [,3] [,4]
[1,]  1.5  7.5 13.5 19.5
[2,]  2.5  8.5 14.5 20.5
[3,]  3.5  9.5 15.5 21.5
[4,]  4.5 10.5 16.5 22.5
[5,]  5.5 11.5 17.5 23.5
 mp <- barplot(VADeaths) # default
 tot <- colMeans(VADeaths)
 text(mp, tot + 3, format(tot), xpd = TRUE, col = "blue")
 barplot(VADeaths, beside = TRUE,
        col = c("lightblue", "mistyrose", "lightcyan",
                "lavender", "cornsilk"),
        legend = rownames(VADeaths), ylim = c(0, 100))
 title(main = "Death Rates in Virginia", font.main = 4)
 hh <- t(VADeaths)[, 5:1]
 mybarcol <- "gray20"
 mp <- barplot(hh, beside = TRUE,
        col = c("lightblue", "mistyrose",
                "lightcyan", "lavender"),
        legend = colnames(VADeaths), ylim = c(0,100),
        main = "Death Rates in Virginia", font.main = 4,
        sub = "Faked upper 2*sigma error bars", col.sub = mybarcol,
        cex.names = 1.5)
 segments(mp, hh, mp, hh + 2*sqrt(1000*hh/100), col = mybarcol, lwd = 1.5)
 stopifnot(dim(mp) == dim(hh))  # corresponding matrices
 mtext(side = 1, at = colMeans(mp), line = -2,
      text = paste("Mean", formatC(colMeans(hh))), col = "red")
 # Bar shading example
 barplot(VADeaths, angle = 15+10*1:5, density = 20, col = "black",
        legend = rownames(VADeaths))
 title(main = list("Death Rates in Virginia", font = 4))
 # border :
 barplot(VADeaths, border = "dark blue") 
 # }
 # NOT RUN {
 # }
 # NOT RUN {
 # }
 # NOT RUN {
 # log scales (not much sense here):
 barplot(tN, col = heat.colors(12), log = "y")
 barplot(tN, col = gray.colors(20), log = "xy")
 # args.legend
 barplot(height = cbind(x = c(465, 91) / 465 * 100,
                       y = c(840, 200) / 840 * 100,
                       z = c(37, 17) / 37 * 100),
        beside = FALSE,
        width = c(465, 840, 37),
        col = c(1, 2),
        legend.text = c("A", "B"),
        args.legend = list(x = "topleft"))
 # }
 read.csv("homogeneite2.csv")
loadPcmStat("homogeneite2.csv")
source("C:\\Users\\diarranabe\\git\\rfucntions.r")
loadPcmStat("homogeneite2.csv")
loadPcmStat("homogeneite2.csv")
loadPcmStat("homogeneite2.csv")
loadPcmStat("homogeneite2.csv")
setwd("C:/Users/diarranabe/Desktop/Master 1/sem1-PDL/WikipediaAnalysis-16-12/WikipediaAnalysis-16-12")
loadPcmStat("homogeneite2.csv")
loadPcmStat("homogeneite2.csv")setwd("C:/Users/diarranabe/Desktop/Master 1/sem1-PDL/WikipediaAnalysis-16-12/WikipediaAnalysis-16-12/outputCSV")
setwd("C:/Users/diarranabe/Desktop/Master 1/sem1-PDL/WikipediaAnalysis-16-12/WikipediaAnalysis-16-12/outputCSV")
loadPcmStat("homogeneite2.csv")
read.csv("homogeneite2.csv")
d = read.csv("homogeneite2.csv")
matrix(r)
matrix(d)
d
q()
